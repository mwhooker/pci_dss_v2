   

6.5.1 Injection flaws, particularly SQL injection. (Validate input to
verify user data cannot modify meaning of commands and
queries, utilize parameterized queries, etc.)

 
  
    
 
 
  

 
 

6.5.2 Buffer overflow (Validate buffer boundaries and truncate
input strings.)

  

6.5.3 Insecure cryptographic storage (Prevent cryptographic
flaws)

  

6.5.4 Insecure communications (Properly encrypt all authenticated
and sensitive communications)

   

6.5.5 Improper error handling (Do not leak information via error
messages)

6.5.6 All â€”Highllulnerabilities as identified in PCI DSS
Requirement 6.2.

   
 
 

   

/////A

6.5.7 Cross-site scripting (XSS) (Validate all parameters before
inclusion, utilize context-sensitive escaping, etc.)

6.5.8 |mproperAccess Control, such as insecure direct object
references, failure to restrict URL access, and directory traversal
(Properly authenticate users and sanitize input. Do not expose
internal object references to users.)

6.5.9 Cross-site request forgery (CSRF). (Do not reply on
authorization credentials and tokens automatically submitted by
browsers.)

